# -*- coding: utf-8 -*-
"""california_linear_regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vQXcLa9RMWpLcy5GheBzflUEO7SR7uMn
"""

import pandas as pd
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# 1. 데이터 로드
data = fetch_california_housing()
x = pd.DataFrame(data.data, columns=data.feature_names)
y = pd.Series(data.target)

# 2. 학습/테스트 데이터 분리
x_train, x_test, y_train, y_test = train_test_split(
    x, y, test_size=0.2, random_state=42
)

# 3. 모델 학습
model = LinearRegression()
model.fit(x_train, y_train)

# 4. 예측
y_pred = model.predict(x_test)

# 5. 평가
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print("✅ MAE(평균 절대 오차):", mae)
print("✅ MSE(평균 제곱 오차):", mse)


# 예측 결과 일부 확인
print("예측값:", y_pred[:5])
print("실제값:", y_test[:5].values)

import matplotlib.pyplot as plt

plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel("test")
plt.ylabel("pred")
plt.title("test vs pred (Linear Regression)")
plt.grid(True)
plt.show()

"""
✅ MAE(평균 절대 오차): 0.5332001304956553  
✅ MSE(평균 제곱 오차): 0.5558915986952444  
예측값: [0.71912284 1.76401657 2.70965883 2.83892593 2.60465725]  
실제값: [0.477   0.458   5.00001 2.186   2.78   ]  

MAE (Mean Absolute Error, 평균 절대 오차):

MAE는 예측값과 실제값 차이의 절대값들의 평균입니다.
각 오차의 절대값을 사용하기 때문에 오차의 크기를 직관적으로 이해하기 쉽습니다.
오차에 비례하여 계산되므로 이상치에 상대적으로 덜 민감합니다.
코드에서는 mean_absolute_error 함수를 사용하여 y_test (실제값)와 y_pred (예측값) 사이의 MAE를 계산합니다.

MSE (Mean Squared Error, 평균 제곱 오차):

MSE는 예측값과 실제값 차이의 제곱들의 평균입니다.
오차를 제곱하기 때문에 큰 오차에 더 큰 가중치를 부여합니다. 즉, 이상치에 더 민감합니다.
제곱을 했기 때문에 오차의 단위가 실제값 단위의 제곱이 됩니다.
코드에서는 mean_squared_error 함수를 사용하여 y_test (실제값)와 y_pred (예측값) 사이의 MSE를 계산합니다.
"""