# -*- coding: utf-8 -*-
"""wine_quality_prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lElBU6nFIP2PFkRqI0DagXU6g6u1yyQK
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.ensemble import RandomForestRegressor

# 1. 데이터 로드
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
df = pd.read_csv(url, sep=";")

# 2. 데이터 확인
print("✅ 데이터 샘플:\n", df.head())
print("\n📊 결측치 확인:\n", df.isnull().sum())

# 3. 상관계수 히트맵
plt.figure(figsize=(8, 6))
sns.heatmap(df.corr(), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Features Correlation Heatmap")
plt.show()

# 4. 특성과 타겟 분리
X = df.drop("quality", axis = 1)
y = df["quality"]

# 5. 스케일링
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 6. 데이터 분할
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# 7. 모델 학습
# model = LinearRegression()
# model.fit(X_train, y_train)
# y_pred = model.predict(X_test)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# 8. 예측 및 평가
print(f"\n✅ MAE: {mean_absolute_error(y_test, y_pred):.4f}")
print(f"✅ MSE: {mean_squared_error(y_test, y_pred):.4f}")
print(f"✅ R² Score: {r2_score(y_test, y_pred):.4f}")

# 9. 시각화
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel("test")
plt.ylabel("pred")
plt.title("Wine Quality - test vs pred")
plt.grid(True)
plt.show()

